{"version":3,"sources":["images/bin.svg","ToDo.jsx","ToDoList.jsx","ToDoForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["ToDo","todo","handleDelete","id","name","value","className","task","onClick","src","binIcon","alt","ToDoList","todos","handleFilter","map","ToDoForm","addTask","useState","userInput","setUserInput","onSubmit","e","preventDefault","type","onChange","currentTarget","placeholder","App","setTodos","useEffect","tasks","JSON","parse","localStorage","getItem","setItem","stringify","copy","newTodos","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAAe,G,MAAA,IAA0B,iC,OCiB1BA,EAbF,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,aAEjB,OACI,sBAAKC,GAAIF,EAAKE,GAA8BC,KAAK,OAAOC,MAAOJ,EAAKE,GAAIG,UAAU,OAAlF,UACKL,EAAKM,KACN,wBAAQD,UAAU,UAAUE,QAAS,kBAAMN,EAAaD,EAAKE,KAA7D,SACI,qBAAKM,IAAKC,EAASC,IAAI,SAHRV,EAAKE,GAAKF,EAAKM,OCU/BK,G,MAZE,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,MAAOX,EAAgC,EAAhCA,aAAcY,EAAkB,EAAlBA,aACpC,OACI,qBAAKR,UAAU,aAAf,SACKO,EAAME,KAAI,SAAAd,GACP,OACI,cAAC,EAAD,CAAMA,KAAMA,EAAoBC,aAAcA,EAAcY,aAAcA,GAAnDb,EAAKE,WCiBjCa,G,MAvBE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACMC,mBAAS,IADf,mBACtBC,EADsB,KACXC,EADW,KAe9B,OACI,uBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,IACCF,EAAQE,GACRC,EAAa,MAKad,UAAU,OAAxC,UACI,uBAAOD,MAAOc,EAAWK,KAAK,OAAOC,SAdxB,SAACH,GAClBF,EAAaE,EAAEI,cAAcrB,QAaoCsB,YAAY,kBACzE,iD,MCkBGC,MAlCf,WAAgB,IAAD,EAEeV,mBAAS,IAFxB,mBAELL,EAFK,KAEEgB,EAFF,KA0Bb,OAXAC,qBAAU,WACR,IAAMC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,eAC1CJ,GACFF,EAASE,KAEV,IAELD,qBAAU,WACNI,aAAaE,QAAQ,aAAcJ,KAAKK,UAAUxB,MACjD,CAACA,IAGF,sBAAKP,UAAU,MAAf,UACE,cAAC,EAAD,CAAUW,QAnBE,SAACE,GACf,IAAImB,EAAI,YAAOzB,GACfyB,EAAI,sBAAOA,GAAP,CAAa,CAAEnC,GAAIgB,EAAWZ,KAAMY,KACxCU,EAASS,MAiBP,cAAC,EAAD,CAAUzB,MAAOA,EAAOX,aAzBP,SAACC,GACpB,IAAMoC,EAAW1B,EAAM2B,QAAO,SAACvC,GAAD,OAAUA,EAAKE,KAAOA,KACpD0B,EAASU,UCAEE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ff73973b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bin.dca70109.svg\";","import React from 'react';\nimport './toDo.css';\nimport binIcon from './images/bin.svg';\n \nconst ToDo = ({todo, handleDelete}) => {\n    \n    return (\n        <div id={todo.id} key={todo.id + todo.task} name=\"todo\" value={todo.id} className=\"todo\">\n            {todo.task}\n            <button className=\"bin-btn\" onClick={() => handleDelete(todo.id)}>\n                <img src={binIcon} alt=\"\"></img>\n            </button>\n        </div>\n        \n   );\n};\n \nexport default ToDo;","import React from 'react';\nimport ToDo from './ToDo';\n\nimport './toDoList.css';\n\nconst ToDoList = ({todos, handleDelete, handleFilter}) => {\n    return (\n        <div className=\"to-do-list\">\n            {todos.map(todo => {\n                return (\n                    <ToDo todo={todo} key={todo.id} handleDelete={handleDelete} handleFilter={handleFilter}/>\n                )\n            })}\n        </div>\n    );\n};\n\nexport default ToDoList;\n","import React, { useState } from \"react\";\n\nimport './toDoForm.css';\n\nconst ToDoForm = ({ addTask }) => {\n    const [ userInput, setUserInput ] = useState('');\n\n    const handleChange = (e) => {\n        setUserInput(e.currentTarget.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(userInput){\n            addTask(userInput);\n            setUserInput(\"\");\n        };\n    }\n\n    return (\n        <form onSubmit={handleSubmit} className=\"form\">\n            <input value={userInput} type=\"text\" onChange={handleChange} placeholder=\"Enter task...\"/>\n            <button>Submit</button>\n        </form>\n    )\n};\n\nexport default ToDoForm;\n","import React, { useState, useEffect } from 'react';\nimport ToDoList from \"./ToDoList\";\nimport ToDoForm from './ToDoForm';\n\nimport './app.css';\n\nfunction App() {\n\n  const [ todos, setTodos ] = useState([]);\n\n  const handleDelete = (id) => {\n    const newTodos = todos.filter((todo) => todo.id !== id);\n    setTodos(newTodos);\n  }\n\n  const addTask = (userInput ) => {\n    let copy = [...todos];\n    copy = [...copy, { id: userInput, task: userInput}];\n    setTodos(copy);\n  }\n\n  useEffect(() => {\n    const tasks = JSON.parse(localStorage.getItem('to_do_list'));\n    if (tasks) {\n      setTodos(tasks);\n    }\n  }, []);\n\nuseEffect(() => {\n    localStorage.setItem('to_do_list', JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <div className=\"app\">\n      <ToDoForm addTask={addTask}/>\n      <ToDoList todos={todos} handleDelete={handleDelete}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}